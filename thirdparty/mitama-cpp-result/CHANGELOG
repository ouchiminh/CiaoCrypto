# v1.1.1

- Result<T, E>::unwrap_or_default() is now explicitly deleted if and only if `std::is_default_constructible_v<T> || std::is_aggregate_v<T>` is false.

# v1.1.2

## bug fix

- Result<T, E>::and_then(O&& op) do not perticipate in overload resolution if unless `op` returns `Result<U, E>`.

`std::invoke_result_t<O&&, T>` must be returns `Result<U, E>`.
It means `op` must only maps `T -> U`, never changes `E`.

- Result<T, E>::or_else(O&& op) do not perticipate in overload resolution if unless `op` returns `Result<T, F>`.

`std::invoke_result_t<O&&, E>` must be returns `Result<T, F>`.
It means `op` must only maps `E -> F`, never changes `T`.

# v2.0.0

## New feature

- `map_or_else`

- `transpose`

## Ends to support

- gcc 7.1
- gcc 7.2
- gcc 7.3

# v2.1.0

## Start to support

- gcc 9.1
- clang 8.0.0
- clang 7.1.0

# v3.0.0

- change directory/namespace structure

# v4.0.0

## New feature

- add match expression

# v4.0.1

## bug fix

- fix compile error on valid code in match expression

# v4.0.2

## bug fix

- mark operator bool explicit

# v4.1.0

## New API

- `expect`, `expect_err`
- `match<R>`
